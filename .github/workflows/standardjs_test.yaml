name: standardjs_test

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - run: cp install/package.json package.json

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: NPM Install
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: Run StandardJS with threshold (plain text only)
        run: |
          # Disable history expansion so "!" is not special
          set +H

          # Always pipe Standard's output into Node, even if the lint step exits nonzero
          ( npm run -s standard 2>&1 || true ) | node -e "
          const fs = require('fs');

          // Read plain text output from stdin
          const raw = fs.readFileSync(0, 'utf8');
          const lines = raw.split('\n');

          let errors = 0;

          // Match lines like: file.js:10:5: message (rule)
          const lintLine = /^.+:\d+:\d+:\s.+\([a-z0-9\-\/]+.*\)$/i;

          for (const line of lines) {
            const trimmed = line.trim();
            if (!trimmed || trimmed.startsWith('standard:')) continue;
            if (lintLine.test(trimmed)) errors++;
          }

          console.log('Detected lint errors:', errors);

          const LIMIT = 1000000;
          if (errors > LIMIT) {
            console.error(\`Too many StandardJS errors: \${errors} > \${LIMIT}\`);
            process.exit(1);
          } else {
            console.log(\`Within threshold: \${errors} â‰¤ \${LIMIT}\`);
          }"